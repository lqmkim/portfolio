---
export const prerender = true;

import WritingLayout from "@layouts/writing-layout.astro";
import { ScrollProgress } from "@components/misc";
import { getReadingTime } from "@utils/index";
import { fetchWritingBySlug, fetchWritings } from "@utils/sanity";
import EndCTA from "@components/cta/end-cta.astro";
import { portableTextToHtml } from "@utils/portableTextToHtml";

interface Writing {
  slug: string;
  title: string;
  description: string;
  category: string;
  pubDate: string;
  content?: any[];
}

export const getStaticPaths = async () => {
  const writings = await fetchWritings();
  return writings.map((writing: Writing) => ({
    params: { slug: writing.slug },
  }));
};

const { slug } = Astro.params;
const writing = await fetchWritingBySlug(slug as string);

if (!writing) return Astro.redirect("/404");

const readingTime = getReadingTime(writing.description);
const blocks = writing.content ?? [];
---

<WritingLayout {...writing} readingTime={readingTime}>
  {
    blocks.map((block: any) => {
      if (block._type === "endCTA") return <EndCTA {...block} />;
      return <div set:html={portableTextToHtml([block])} />;
    })
  }
  <ScrollProgress />
</WritingLayout>
